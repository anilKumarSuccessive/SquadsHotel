status = warn
name= RollingFileLogConfigDemo

# Log files location
property.basePath = ./logs

# Configure root logger
#rootLogger.level = debug
rootLogger.appenderRef.rolling.ref = fileLogger

rootLogger.level = info
#rootLogger.appenderRef.stdout.ref = Socket_Appender

## Send logs to a remote address
#appender.socket.type = Socket
#appender.socket.name= Socket_Appender
#appender.socket.host = 127.0.0.1
#appender.socket.port = 8101
#appender.socket.layout.type = SerializedLayout
#appender.socket.connectTimeoutMillis = 2000
#appender.socket.reconnectionDelayMillis = 1000
#appender.socket.protocol = TCP

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${basePath}/app.log
appender.rolling.filePattern= ${basePath}/app_%d{yyyyMMddHH}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d



